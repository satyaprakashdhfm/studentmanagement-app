generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========================================
// VERSION 2.0 ENTERPRISE SCHEMA
// ========================================

model AcademicYear {
  academicYearId      String   @id @map("academic_year_id") @db.VarChar(4)
  academicYearDisplay String   @map("academic_year_display") @db.VarChar(9)
  startDate           DateTime @map("start_date") @db.Date
  endDate             DateTime @map("end_date") @db.Date
  status              String   @default("UPCOMING") @map("status") @db.VarChar(20)
  isCurrent           Boolean  @default(false) @map("is_current")
  termStructure       Json?    @map("term_structure")
  holidays            Json?    @map("holidays")
  examinationSchedule Json?    @map("examination_schedule")
  createdAt           DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt           DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  createdBy           String?  @map("created_by") @db.VarChar(255)
  updatedBy           String?  @map("updated_by") @db.VarChar(255)

  // Relations
  classes            Class[]
  classStandardFees  ClassStandardFee[]
  studentFees        StudentFee[]
  users              User[]
  subjects           Subject[]
  teachers           Teacher[]

  @@map("academic_years")
}

model Class {
  classId          String   @id @map("class_id") @db.VarChar(10)
  className        String   @map("class_name") @db.VarChar(50)
  sectionName      String   @map("section_name") @db.VarChar(10)
  academicYearId   String   @map("academic_year_id") @db.VarChar(4)
  maxStudents      Int?     @map("max_students")
  currentStudents  Int      @default(0) @map("current_students")
  roomAssignment   String?  @map("room_assignment") @db.VarChar(50)
  active           Boolean  @default(true) @map("active")
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  updatedBy        String?  @map("updated_by") @db.VarChar(255)

  // Relations
  academicYear      AcademicYear       @relation(fields: [academicYearId], references: [academicYearId])
  students          Student[]
  classStandardFees ClassStandardFee[]
  studentFees       StudentFee[]
  timeSlots         TimeSlot[]
  scheduleData      ScheduleData[]
  calendarGrid      CalendarGrid[]
  attendance        Attendance[]
  marks             Mark[]
  teachers          Teacher[]

  @@map("classes")
}

model ClassStandardFee {
  feeId          String    @id @map("fee_id") @db.VarChar(255)
  classId        String    @map("class_id") @db.VarChar(10)
  feeName        String    @map("fee_name") @db.VarChar(255)
  amount         Decimal   @map("amount") @db.Decimal(10, 2)
  academicYearId String    @map("academic_year_id") @db.VarChar(4)
  dueDate        DateTime? @map("due_date") @db.Date
  createdAt      DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  createdBy      String?   @map("created_by") @db.VarChar(255)
  updatedBy      String?   @map("updated_by") @db.VarChar(255)

  // Relations
  class        Class        @relation(fields: [classId], references: [classId])
  academicYear AcademicYear @relation(fields: [academicYearId], references: [academicYearId])
  studentFees  StudentFee[]

  @@map("class_standard_fees")
}

model User {
  username          String    @id @unique @map("username") @db.VarChar(255)
  email             String    @unique @map("email") @db.VarChar(255)
  password          String?   @map("password") @db.VarChar(255)
  firstName         String?   @map("first_name") @db.VarChar(255)
  lastName          String?   @map("last_name") @db.VarChar(255)
  role              String    @default("student") @map("role") @db.VarChar(50)
  academicYearId    String?   @map("academic_year_id") @db.VarChar(4)
  twoFactorEnabled  Boolean   @default(false) @map("two_factor_enabled")
  lastLogin         DateTime? @map("last_login")
  active            Boolean   @default(true) @map("active")
  currentSessionId  String?   @map("current_session_id") @db.VarChar(255)
  sessionExpiry     DateTime? @map("session_expiry")
  loginCount        Int       @default(0) @map("login_count")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")
  updatedBy         String?   @map("updated_by") @db.VarChar(255)

  // Relations
  academicYear AcademicYear? @relation(fields: [academicYearId], references: [academicYearId])
  student      Student?
  teacher      Teacher?

  @@map("users")
}

model School {
  schoolId         String @id @map("school_id") @db.VarChar(255)
  name             String @map("name") @db.VarChar(255)
  address          String? @map("address")
  affiliationBoard String? @map("affiliation_board") @db.VarChar(100)
  schoolType       String? @map("school_type") @db.VarChar(50)

  // Relations
  students Student[]

  @@map("schools")
}

model Student {
  studentId                      String    @id @map("student_id") @db.VarChar(255)
  name                          String    @map("name") @db.VarChar(255)
  email                         String?   @map("email") @db.VarChar(255)
  address                       String?   @map("address")
  admissionDate                 DateTime? @map("admission_date") @db.Date
  previousSchoolId              String?   @map("previous_school_id") @db.VarChar(255)
  previousSchoolName            String?   @map("previous_school_name") @db.VarChar(255)
  previousSchoolAddress         String?   @map("previous_school_address")
  previousSchoolPhone           String?   @map("previous_school_phone") @db.VarChar(20)
  transferReason                String?   @map("transfer_reason")
  classId                       String    @map("class_id") @db.VarChar(10)
  primaryGuardianName           String?   @map("primary_guardian_name") @db.VarChar(255)
  primaryGuardianRelationship   String?   @map("primary_guardian_relationship") @db.VarChar(50)
  primaryGuardianPhone          String?   @map("primary_guardian_phone") @db.VarChar(20)
  primaryGuardianEmail          String?   @map("primary_guardian_email") @db.VarChar(255)
  primaryGuardianAddress        String?   @map("primary_guardian_address")
  secondaryGuardianName         String?   @map("secondary_guardian_name") @db.VarChar(255)
  secondaryGuardianRelationship String?   @map("secondary_guardian_relationship") @db.VarChar(50)
  secondaryGuardianPhone        String?   @map("secondary_guardian_phone") @db.VarChar(20)
  secondaryGuardianEmail        String?   @map("secondary_guardian_email") @db.VarChar(255)
  secondaryGuardianAddress      String?   @map("secondary_guardian_address")
  active                        Boolean   @default(true) @map("active")
  createdAt                     DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt                     DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  updatedBy                     String?   @map("updated_by") @db.VarChar(255)

  // Relations
  user           User         @relation(fields: [studentId], references: [username])
  class          Class        @relation(fields: [classId], references: [classId])
  previousSchool School?      @relation(fields: [previousSchoolId], references: [schoolId])
  studentFees    StudentFee[]
  attendance     Attendance[]
  marks          Mark[]

  @@map("students")
}

model StudentFee {
  studentFeeId      String    @id @map("student_fee_id") @db.VarChar(255)
  studentId         String    @map("student_id") @db.VarChar(255)
  classId           String    @map("class_id") @db.VarChar(10)
  feeId             String    @map("fee_id") @db.VarChar(255)
  standardAmount    Decimal   @map("standard_amount") @db.Decimal(10, 2)
  finalAmount       Decimal   @map("final_amount") @db.Decimal(10, 2)
  amountPaid        Decimal   @default(0) @map("amount_paid") @db.Decimal(10, 2)
  balance           Decimal   @map("balance") @db.Decimal(10, 2)
  paymentStatus     String    @default("pending") @map("payment_status") @db.VarChar(20)
  dueDate           DateTime? @map("due_date") @db.Date
  lastPaymentDate   DateTime? @map("last_payment_date") @db.Date
  academicYearId    String    @map("academic_year_id") @db.VarChar(4)
  createdAt         DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  createdBy         String?   @map("created_by") @db.VarChar(255)
  updatedBy         String?   @map("updated_by") @db.VarChar(255)

  // Relations
  student        Student          @relation(fields: [studentId], references: [studentId])
  class          Class            @relation(fields: [classId], references: [classId])
  fee            ClassStandardFee @relation(fields: [feeId], references: [feeId])
  academicYear   AcademicYear     @relation(fields: [academicYearId], references: [academicYearId])

  @@map("student_fees")
}

model Teacher {
  teacherId        String   @id @map("teacher_id") @db.VarChar(255)
  name             String   @map("name") @db.VarChar(255)
  email            String?  @map("email") @db.VarChar(255)
  phoneNumber      String?  @map("phone_number") @db.VarChar(20)
  qualification    String?  @map("qualification")
  hireDate         DateTime? @map("hire_date") @db.Date
  salary           Decimal? @map("salary") @db.Decimal(10, 2)
  classesAssigned  Json     @default("[]") @map("classes_assigned")
  subjectsHandled  Json     @default("[]") @map("subjects_handled")
  academicYearId   String   @map("academic_year_id") @db.VarChar(4)
  classTeacherOf   String?  @map("class_teacher_of") @db.VarChar(10)
  active           Boolean  @default(true) @map("active")
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  updatedBy        String?  @map("updated_by") @db.VarChar(255)

  // Relations
  user         User         @relation(fields: [teacherId], references: [username])
  academicYear AcademicYear @relation(fields: [academicYearId], references: [academicYearId])
  class        Class?       @relation(fields: [classTeacherOf], references: [classId])
  syllabus     Syllabus[]
  scheduleData ScheduleData[]
  attendance   Attendance[]
  marks        Mark[]

  @@map("teachers")
}

model Subject {
  subjectCode     String   @id @map("subject_code") @db.VarChar(20)
  subjectName     String   @map("subject_name") @db.VarChar(100)
  gradeLevel      String   @map("grade_level") @db.VarChar(20)
  academicYearId  String   @map("academic_year_id") @db.VarChar(4)
  maxMarksPerExam Int      @default(100) @map("max_marks_per_exam")
  isActive        Boolean  @default(true) @map("is_active")
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  updatedBy       String?  @map("updated_by") @db.VarChar(255)

  // Relations
  academicYear AcademicYear @relation(fields: [academicYearId], references: [academicYearId])
  syllabus     Syllabus[]
  scheduleData ScheduleData[]
  attendance   Attendance[]
  marks        Mark[]

  @@map("subjects")
}

model Syllabus {
  syllabusId         String   @id @map("syllabus_id") @db.VarChar(255)
  academicYearId     String   @map("academic_year_id") @db.VarChar(4)
  subjectCode        String   @map("subject_code") @db.VarChar(20)
  classId            String   @map("class_id") @db.VarChar(10)
  unitName           String   @map("unit_name") @db.VarChar(255)
  unitOrder          Int      @map("unit_order")
  subTopics          Json?    @map("sub_topics")
  completionPercentage Int    @default(0) @map("completion_percentage")
  status             String   @default("not-started") @map("status") @db.VarChar(20)
  teacherId          String?  @map("teacher_id") @db.VarChar(255)
  startDate          DateTime? @map("start_date") @db.Date
  expectedEndDate    DateTime? @map("expected_end_date") @db.Date
  actualEndDate      DateTime? @map("actual_end_date") @db.Date
  createdAt          DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  updatedBy          String?  @map("updated_by") @db.VarChar(255)

  // Relations
  subject  Subject  @relation(fields: [subjectCode], references: [subjectCode])
  teacher  Teacher? @relation(fields: [teacherId], references: [teacherId])

  @@map("syllabus")
}

model TimeSlot {
  slotId      Int      @id @default(autoincrement()) @map("slot_id")
  classId     String   @map("class_id") @db.VarChar(10)
  dayOfWeek   Int      @map("day_of_week")
  periodNumber Int     @map("period_number")
  startTime   String   @map("start_time") @db.VarChar(10)
  endTime     String   @map("end_time") @db.VarChar(10)
  sessionType String   @map("session_type") @db.VarChar(10)
  slotOrder   Int      @map("slot_order")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  class        Class          @relation(fields: [classId], references: [classId])
  scheduleData ScheduleData[]
  attendance   Attendance[]

  @@map("time_slots")
}

model ScheduleData {
  scheduleId   String   @id @map("schedule_id") @db.VarChar(100)
  slotId       Int      @map("slot_id")
  classId      String   @map("class_id") @db.VarChar(10)
  subjectCode  String   @map("subject_code") @db.VarChar(20)
  teacherId    String   @map("teacher_id") @db.VarChar(255)
  academicYear String   @map("academic_year") @db.VarChar(4)
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  createdBy    String?  @map("created_by") @db.VarChar(255)
  updatedBy    String?  @map("updated_by") @db.VarChar(255)

  // Relations
  timeSlot Class   @relation(fields: [classId], references: [classId])
  slot     TimeSlot @relation(fields: [slotId], references: [slotId])
  subject  Subject  @relation(fields: [subjectCode], references: [subjectCode])
  teacher  Teacher  @relation(fields: [teacherId], references: [teacherId])

  @@map("schedule_data")
}

model CalendarGrid {
  gridId               String   @id @map("grid_id") @db.VarChar(30)
  classId              String   @map("class_id") @db.VarChar(10)
  calendarDate         DateTime @map("calendar_date") @db.Date
  dayOfWeek            Int      @map("day_of_week")
  dayType              String   @default("working") @map("day_type") @db.VarChar(20)
  holidayName          String?  @map("holiday_name") @db.VarChar(100)
  appliedTemplateId    String?  @map("applied_template_id") @db.VarChar(100)
  scheduleOverrides    Json?    @map("schedule_overrides")
  examType             String?  @map("exam_type") @db.VarChar(20)
  examSession          String?  @map("exam_session") @db.VarChar(20)
  academicYear         String   @map("academic_year") @db.VarChar(4)
  createdAt            DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt            DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  createdBy            String?  @map("created_by") @db.VarChar(255)
  updatedBy            String?  @map("updated_by") @db.VarChar(255)

  // Relations
  class      Class        @relation(fields: [classId], references: [classId])
  attendance Attendance[]
  marks      Mark[]

  @@map("calendar_grid")
}

model Attendance {
  attendanceId   String    @id @map("attendance_id") @db.VarChar(50)
  gridId         String    @map("grid_id") @db.VarChar(30)
  studentId      String    @map("student_id") @db.VarChar(255)
  classId        String    @map("class_id") @db.VarChar(10)
  attendanceDate DateTime  @map("attendance_date") @db.Date
  dayOfWeek      Int       @map("day_of_week")
  slotId         Int?      @map("slot_id")
  periodNumber   Int?      @map("period_number")
  sessionType    String?   @map("session_type") @db.VarChar(10)
  status         String    @default("present") @map("status") @db.VarChar(20)
  attendanceType String    @default("regular") @map("attendance_type") @db.VarChar(20)
  subjectCode    String?   @map("subject_code") @db.VarChar(20)
  teacherId      String?   @map("teacher_id") @db.VarChar(255)
  markedBy       String    @map("marked_by") @db.VarChar(255)
  remarks        String?   @map("remarks")
  isBulkEntry    Boolean   @default(false) @map("is_bulk_entry")
  createdAt      DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  createdBy      String?   @map("created_by") @db.VarChar(255)
  updatedBy      String?   @map("updated_by") @db.VarChar(255)

  // Relations
  calendarGrid CalendarGrid @relation(fields: [gridId], references: [gridId])
  timeSlot     TimeSlot?    @relation(fields: [slotId], references: [slotId])
  student      Student      @relation(fields: [studentId], references: [studentId])
  class        Class        @relation(fields: [classId], references: [classId])
  subject      Subject?     @relation(fields: [subjectCode], references: [subjectCode])
  teacher      Teacher?     @relation(fields: [teacherId], references: [teacherId])

  @@map("attendance")
}

model Mark {
  marksId         String    @id @map("marks_id") @db.VarChar(50)
  gridId          String?   @map("grid_id") @db.VarChar(30)
  studentId       String    @map("student_id") @db.VarChar(255)
  classId         String    @map("class_id") @db.VarChar(10)
  academicYear    String    @map("academic_year") @db.VarChar(4)
  examinationName String    @map("examination_name") @db.VarChar(20)
  examDate        DateTime? @map("exam_date") @db.Date
  examSession     String?   @map("exam_session") @db.VarChar(10)
  marksObtained   Decimal   @map("marks_obtained") @db.Decimal(5, 2)
  maxMarks        Decimal   @map("max_marks") @db.Decimal(5, 2)
  percentage      Decimal?  @map("percentage") @db.Decimal(5, 2)
  weightage       Decimal   @default(1.00) @map("weightage") @db.Decimal(4, 2)
  grade           String?   @map("grade") @db.VarChar(5)
  isFinal         Boolean   @default(false) @map("is_final")
  subjectCode     String?   @map("subject_code") @db.VarChar(20)
  teacherId       String?   @map("teacher_id") @db.VarChar(255)
  markedBy        String    @map("marked_by") @db.VarChar(255)
  remarks         String?   @map("remarks")
  entryDate       DateTime  @default(now()) @map("entry_date") @db.Timestamptz(6)
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  createdBy       String?   @map("created_by") @db.VarChar(255)
  updatedBy       String?   @map("updated_by") @db.VarChar(255)

  // Relations
  calendarGrid CalendarGrid? @relation(fields: [gridId], references: [gridId])
  student      Student       @relation(fields: [studentId], references: [studentId])
  class        Class         @relation(fields: [classId], references: [classId])
  subject      Subject?      @relation(fields: [subjectCode], references: [subjectCode])
  teacher      Teacher?      @relation(fields: [teacherId], references: [teacherId])

  @@map("marks")
}
